@model project.ModelView.TeacherInputModel
@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="col-12">
        <h2>Create new Teacher List</h2>
        <div id="msg"></div>

        @using (Ajax.BeginForm("Create", "Teachers", new { }, new AjaxOptions { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", UpdateTargetId = "msg", OnSuccess = "onSuccess" }, new { id = "frm" }))
        {

            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.TeacherName, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(t => t.TeacherName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(t => t.TeacherName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.Teacherdob, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(t => t.Teacherdob, new { @class = "form-control date" })
                    @Html.ValidationMessageFor(t => t.Teacherdob, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.TeacherEmail, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(t => t.TeacherEmail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(t => t.TeacherEmail, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.TeacherPhone, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(t => t.TeacherPhone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(t => t.TeacherPhone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.ExpectedAmount, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(t => t.ExpectedAmount, new { @class = "form-control", @type = "number" })
                    @Html.ValidationMessageFor(t => t.ExpectedAmount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.Areas, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.DropDownListFor(t => t.AreaId, new SelectList(ViewBag.Area, "AreaId", "Locations"), "Select One", new { @class = "form-select" })
                    @Html.ValidationMessageFor(t => t.AreaId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.IsAvailable, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.CheckBoxFor(t => t.IsAvailable, new { @class = "mt-2" })

                </div>
            </div>
            <div class="form-group row mb-1">
                @Html.LabelFor(t => t.Picture, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    <input type="file" id="pic" class="form-control" />
                    @Html.HiddenFor(t => t.Picture)
                    @Html.ValidationMessageFor(t => t.Picture, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row">
                <h5 class=" text-center mt-3 mb-3 ">Add New Order</h5>
                <div class="d-flex justify-content-end">
                    <button type="button" class="btn btn-primary btn-sm mb-3 " id="add">Add </button>
                </div>
                <div class="row m-2" id="qualification">
                    @Html.Action("AddQuationToForm")
                </div>
            </div>

            <div class="w-100">
                <div class="d-flex justify-content-end me-2">
                    <button type="submit" id="save" class="btn btn-primary">Save to database</button>
                </div>
            </div>
        }
        <div class="col-12">
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-outline-success" })
        </div>
    </div>

</div>

@section styles
{
    <link href="~/Content/bootstrap-datepicker.standalone.css" rel="stylesheet" />
}
@section scripts
{
    <script src="~/Scripts/jquery-3.6.3.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script type="text/javascript">
        $.validator.setDefaults({
            ignore: ""
        });

        $(".date").datepicker({
            format: "yyyy-mm-dd"
        });
        $("#add").click(() => {
            console.log("click")
            $.ajax({
                type: "POST",
                url: "/Teachers/AddQuationToForm",
                cache: false,
                data: $("#frm").serialize(),
                success: r => {
                    $("#qualification").html(r);

                }
            })
             
        })
        $("#pic").change(() => {
            if (document.getElementById("pic").files.length) {
                $("#Picture").val(document.getElementById("pic").files[0].name)
            }
        })
        $(document).on("click", "button.del", function () {
            var i = $(this).data("index");
            $.ajax({
                type: "POST",
                url: "/Teachers/AddQuationToForm?index=" + i,
                cache: false,
                data: $("#frm").serialize(),
                success: r => {
                    $("#qualification").html(r);

                }
            });
        })
        function onSuccess(r) {
            if (r) {
                console.log(r);
                var formData = new FormData();
                if (document.getElementById("pic").files.length > 0) {
                    formData.append("Picture", document.getElementById("pic").files[0]);
                    //console.log(formData);
                    $.ajax({
                        type: "POST",
                        url: "/Teachers/UploadImage/" + r.id,
                        data: formData,
                        contentType: false, // NEEDED, DON'T OMIT THIS (requires jQuery 1.6+)
                        processData: false,
                        success: ss => {
                            console.log(ss);
                            alert("Data saved");
                        },
                        error: err1 => {
                            console.log(err1);
                        }
                    });
                }
            }
        }
        function onFail(err) {

        }

    </script>
}

